version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db_tovo
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-myapp}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

  # Database Migration Service
  db-migrate:
    build:
      context: .
      dockerfile: ./database/Dockerfile
    container_name: db_migration_tovo
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-myapp}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  # NestJS Backend
  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    container_name: nestjs_server_tovo
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-myapp}
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-key}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-your-stripe-secret-key}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET:-your-stripe-webhook-secret}
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - app-network

  # React Frontend
  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    container_name: react_client_tovo
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - server
    networks:
      - app-network

  # Nginx Reverse Proxy (optional - for production)
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy_tovo
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - client
      - server
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
